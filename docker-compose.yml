version: '3'

services:
  traefik:
    # The official v2 Traefik docker image
    image: traefik:v2.5
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --certificatesresolvers.myresolver.acme.email=${LE_EMAIL}
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik-config:/config:ro
      - $DATA_DIR/traefik2:/data
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock


  ## Mattermost

  mattermost:
    environment:
      # necessary Mattermost options/variables (see env.example)
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable&connect_timeout=10

      # additional settings
      - MM_SERVICESETTINGS_SITEURL=https://${MATTERMOST_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mattermost.rule=Host(`$MATTERMOST_DOMAIN`)"

  ## JITSI

  # Frontend
  web:
    image: jitsi/web:$JITSI_TAG
    ports: [] # do not expose the ports directly. Route this through traefik
    environment: 
      - PUBLIC_URL=https://${JITSI_DOMAIN}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jitsi.rule=Host(`$JITSI_DOMAIN`)"
    networks:
      meet.jitsi:
      default:

  # XMPP server
  prosody:
    image: jitsi/prosody:$JITSI_TAG
    environment:
      - PUBLIC_URL=https://${JITSI_DOMAIN}

  # Focus component
  jicofo:
    image: jitsi/jicofo:$JITSI_TAG

  # Video bridge
  jvb:
    image: jitsi/jvb:$JITSI_TAG
    environment:
      - PUBLIC_URL=https://${JITSI_DOMAIN}
